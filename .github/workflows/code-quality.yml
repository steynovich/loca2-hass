name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv pip install --system ruff black mypy

    - name: Lint with ruff
      run: |
        ruff check custom_components/ tests/ --output-format=github

    - name: Check formatting with black
      run: |
        black --check --diff custom_components/ tests/

    - name: Type check with mypy
      run: |
        mypy custom_components/loca2/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install bandit
      run: |
        uv pip install --system "bandit[toml]"

    - name: Run security scan
      run: |
        bandit -r custom_components/ -f json -o bandit-report.json || true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json

  complexity:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install complexity tools
      run: |
        uv pip install --system radon xenon

    - name: Check cyclomatic complexity
      run: |
        radon cc custom_components/ -a -nb

    - name: Check maintainability index
      run: |
        radon mi custom_components/ -nb

    - name: Check complexity with xenon
      run: |
        xenon --max-absolute D --max-modules B --max-average B custom_components/

  documentation:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv pip install --system pydocstyle

    - name: Check docstring style
      run: |
        pydocstyle custom_components/loca2/ --convention=google

  dependency-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install safety
      run: |
        uv pip install --system safety

    - name: Check dependencies for security vulnerabilities
      run: |
        safety check --json > safety-report.json || true

    - name: Upload safety report
      uses: actions/upload-artifact@v4
      with:
        name: safety-report
        path: safety-report.json